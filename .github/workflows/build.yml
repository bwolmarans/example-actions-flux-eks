# build.yml
on:
  pull_request:
    paths:
    - app/**
  push:
    paths:
    - app/**
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
    - master          # triggers on pushes that contain changes in master

name: Build and Push to ECR

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: example-eks:${{ github.sha }}

jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Add steps here like linting, testing, minification, etc.
      
    - name: Setup ECR
      run: |
        # Login to AWS ECR
        #ecr-login is fully deprecated!
        #$(aws ecr get-login --no-include-email )
        #this would normally result in 
        #ocker login -u AWS -p <password> -e none https://<aws_account_id>.dkr.ecr.<region>.amazonaws.com
        aws ecr get-login-password | docker login --username AWS --password-stdin 058625519174.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and tag the image
      run: |
        # Build and tag the image
        docker build \
          -t $CONTAINER_IMAGE \
          -t 058625519174.dkr.ecr.us-east-1.amazonaws.com/$CONTAINER_IMAGE ./app
           
    # Add additional steps here like scanning of image

    # Only push to registry on master
    - name: Push
      if: github.ref == 'refs/heads/master'
      run: |
        # Push image to AWS ECR
        docker push 058625519174.dkr.ecr.us-east-1.amazonaws.com/$CONTAINER_IMAGE
