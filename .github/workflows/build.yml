# build.yml
on:
  pull_request:
    paths:
    - app/**
  push:
    paths:
    - app/**
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
    - master          # triggers on pushes that contain changes in master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


name: Build and Push to ECR

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: us-east-1
  #AWS_DEFAULT_OUTPUT: json
  #AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #CONTAINER_IMAGE: example-eks

jobs:
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Install Cosign
      uses: sigstore/cosign-installer@main

    - name: Build, tag, push image to Amazon ECR, and sign with Ccosign
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: example-eks
        IMAGE_TAG: example-eks
        
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Sign image with a key
      env:
        #TAGS: ${{ steps.docker_meta.outputs.tags }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: example-eks
        IMAGE_TAG: example-eks          
        COSIGN_KEY: ${{secrets.COSIGN_KEY}}
        COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

      run: |
        echo $COSIGN_KEY > /tmp/my_cosign.key
        cat /tmp/my_cosign.key
        echo -n "${COSIGN_PASSWORD}" |cosign sign --key /tmp/my_cosign.key $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    
